name: Publica√ß√£o autom√°tica
on:  
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cria um arquivo tempor√°rio para a chave privada e altera a permiss√£o do arquivo
        run: |
          echo "${{ secrets.KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key

      - name: Criando a pasta da aplica√ß√£o no servidor
        run: |
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} \
            "sudo mkdir -p /home/ubuntu/apps/helloflask"

      - name: Ajustar permiss√µes no servidor de Produ√ß√£o
        run: |
          sshx -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} \
            "sudo chown -R ubuntu:ubuntu /home/ubuntu/apps && sudo chmod -R 755 /home/ubuntu/apps"

      # Backup da aplica√ß√£o atual antes de substituir
      - name: Backup da aplica√ß√£o atual
        run: |
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} \
            "cd /home/ubuntu/apps && tar -czf /home/ubuntu/apps/helloflask_backup_$(date +'%Y%m%d%H%M%S').tar.gz helloflask"

      - name: Transferindo os arquivos da aplica√ß√£o
        run: |
          scp -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ${{ github.workspace }}/* \
            ubuntu@${{ secrets.HOST }}:/home/ubuntu/apps/helloflask

      - name: Criando e ativando ambiente virtual e instalando as depend√™ncias
        run: |
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} << 'EOF'
            cd /home/ubuntu/apps/helloflask
            python3 -m venv .venv
            source .venv/bin/activate
            pip install --upgrade pip
            pip install flask gunicorn
          EOF

      - name: Reiniciando o servi√ßo da aplica√ß√£o
        run: |
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ secrets.HOST }} \
            sudo systemctl restart helloflask.service

      - name: Limpa o arquivo de chave privada ap√≥s uso
        run: |
          rm /tmp/private_key

      # Notifica√ß√£o de sucesso (j√° configurada)
      - name: Notifica√ß√£o de sucesso para Discord
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'üöÄ Deploy conclu√≠do e aplica√ß√£o reiniciada com sucesso! ‚úÖ\n\nAutor do push: **${{ github.actor }}**'

      # Notifica√ß√£o de erro para Discord
      - name: Notifica√ß√£o de falha para Discord
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: '‚ùå O deploy falhou! üòû\n\nAutor do push: **${{ github.actor }}**'
